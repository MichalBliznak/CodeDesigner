Changes in version 1.6.6 beta (2015-11-01):
------------------------------------------------
- Significantly improved source code synchronization speed.

Changes in version 1.6.5 beta (2015-03-05):
------------------------------------------------
- Diagram items IDs and names are context-exclusive now (i.e. item names are uniqe per diagram
  and not per project). Diagram names are unique per project.
- Fixed copying of class items.
- Disabled code generation is indicated by different (pink by default) canvas background colour.

Changes in version 1.6.4 beta (2014-10-26):
------------------------------------------------
- Application keyboard shortcuts should work now as expected.
- "Save project" icon added to the main application toolbar.
- Source code of a submachine is generated to an output file specified in its super-diagram's properties.
- New action function is created when a generic function is dropped onto a transition (and similarly
  for generic variable) instead of previous behavior where the former was transformed into the new
  code item.
- Hierarchical states can handle managed submachines correctly.
- Fixed crash appearing when an item managed by composite shape has been duplicated by using drag
  and drop operation.
- Sub machine's return value is now stored in the designated variable on option which can be
  specified in the sub machine's properties dialog.
- Fixed regression in assignment of newly created conditions/actions whose names were
  specified by using editable transition's guard edit control.
- Fixed synchronization of user-defined source code in diagrams with custom output file name.
- Code sync dialog is resizable.
- Diagrams can be exported in SVG format.

Changes in version 1.6.3 beta (2014-07-22):
------------------------------------------------
- Minor GUI tweaks and fixes.
- Fixed various issues in DnD operations (when some elements were dropped onto transitions or states).
- Fixed handling of class members with non-unique names.
- Fixed code generation for non-blocking state charts.
- Fixed pre-processing of composite states containing another composite states (incomming and 
  outgoing transitions connected to the outer composite state were duplicated during the re-
  connection process).
- Non-blocking state chart returns value only when contains any final state.
- Holding CTRL key during a connection's control point creation allow users to place the
  connection point even "onto" an underlyind diagram item.
- Hold SHIFT key when clicking the diagram items to add them to the selection or hold CTRL+SHIFT
  keys when clicking onto already selected diagram items to remove them from the selection.
- Event flags can be cleared automatically on option (see Event flag's properties dialog).
- Fixed export of diagrams with disabled background to images.
- Append file extension (*.cdp) to the CodeDesigner's project name if missing on "Save As...".
- Fixed code generation to an output directory specified in the project settings by using
  relative path.
- Non-blocking state chart cannot be used with Python output language.
- Fixed confusing verification status.
- Undo/Redo history depth increased to 20 levels.

Changes in version 1.6.2 beta (2012-10-24):
------------------------------------------------
- Class members names don't have to be unique.
- Return statement is not generated in inlined non-blocking state chart.

Changes in version 1.6.1 beta (2012-04-30):
------------------------------------------------
- Fixed position of generated 'include' in code items header file.
- Fixed code generation of state chart's IDs if 'Inline code' property for the state chart
  is set to TRUE.
- Fixed crash occured when an action was added to the composite state.

Changes in version 1.6.0 beta (2012-04-02):
------------------------------------------------
- Fixed code generation for variables with user-defined data types and 'extern' modifier set.
- Update signatures also for generic variables/functions if created via main toolbar/menu.
- Scope and signature of function parameters are updated correctly if parent function's name is changed.
- Scope and signature of class member function parameters are updated correctly if the parent class is copied.
- Diagram bank content can be imported/exported from/to a file.
- Added support for non-blocking state charts.
- Removed useless "Inline code" option from Class diagram properties dialog.
- Fixed application freeze on making of valid identifier name from properties dialogs (occured if wx2.9.x was used for building the app).
- Fixed code generation of function parameters with data modifier defined.
- Fixed generic function's properties dialog where "Inline code" check box wasn't handled properly.
- User-defined state chart's input actions can be generated inlined.
- Use project settings instead of global application settings for determination whether the project code
  should be automatically synchronized on the code generation.

Changes in version 1.5.5 beta (2012-03-16):
------------------------------------------------
- Fixed handling of overloaded class member functions.
- Fixed crash occured when class element was pasted to the project where no original class members 
  referenced by the class existed.

Changes in version 1.5.4 beta (2012-01-1):
------------------------------------------------
- Modified hierarchical state charts preprocessor: entry/exit actions aren't assigned to state-loop transitions (i.e. transitions
  starting and ending in the same state).
- The last folder used for diagram's export is remembered.
- Fixed Go-To code generation algorithm where incorrect jump was generated in case an inverted condition was used.
- Fixed Go-To code generation algorithm where history states were processed incorrectly.
- Fixed optimization of hierarchical state chart containing history state.
- Optimized jumps in Go-To algorithm.
- Removed useless label generated for history state in Go-To algorithm.
- "Add files" dialog in Reverse Engineering panel now remembers the last used directory.
- Reverse Engineering: fixed import of data type when the variable name is a part of its data type name (e.g. int i).
- Reverse Engineering: try to determine multiplicity in class associations.
- Generate empty function bodies including code marks instead of currently used "dummy code" comment if no user-defined code is available.

Changes in version 1.5.3 beta (2011-12-18):
------------------------------------------------
- Fixed parsing of variable name if namespace is used (for example in static class members).

Changes in version 1.5.2 beta (2011-12-17):
------------------------------------------------
- Available as a Debian/Ubuntu package.

Changes in version 1.5.1 beta (2011-12-15):
------------------------------------------------
- Improved Reverse Engineering plugin.
- CTAGS utility included in the application sources.
- Minor GUI update.

Changes in version 1.5.0 beta (2011-11-25):
------------------------------------------------
- Implemented reverse code engineering for class diagrams (for both C++ and Python languages).
- Fixed C++ code generation for classes with multiple bases.
- Fixed Python code generation for classes without members.
- Fixed Python code generation for class data members.
- Fixed code generation for inner (included) classes.
- Fixed code generation for user-defined code containig empty lines.
- Fixed drawing issues when multiple selected diagram element were handled.
- Improved export of diagram's canvas to image. Several image formats are supported now and also diagram's background
  export can be suppressed.

Changes in version 1.4.4 beta (2011-11-04):
------------------------------------------------
- Fixed crash occured when diagram font was changed.
- Left-mouse-button double-click onto diagram element now opens correct properties
  dialog even for child elements.
- Optimized drawing performance.

Changes in version 1.4.3 beta (2011-10-13):
------------------------------------------------
- Fixed crash that could occure when aggregation links were used in class diagram.
- Fixed creation of copy of a class element by dragging from project tree (CTRL key
  must be pressed down).
- Added ability to define whether source code of associated class will be included inside a referencing
  one if basic or composition aggregation is used (see association element properties dialog).

Changes in version 1.4.2 beta (2011-04-12):
------------------------------------------------
- Fixed diagram print.
- Fixed user-defined code update performed via properties dialog.
- Beautified diagram grid under MS Windows.

Changes in version 1.4.1 beta (2011-03-11):
------------------------------------------------
- Fixed specification of relative output path on Windows.
- Allowing/disabling of usage of tabulators in generated code doesn't require the CodeDesigner
  restart anymore.

Changes in version 1.4.0 beta (2011-03-04):
------------------------------------------------
- Fixed Horizontal/Vertical tree layout algorithm.
- CodeDesigner can be run with "-g" parameter followed by path to existing CodeLite project which
  will cause immediate loading and generation of the project in "silent mode" (CodeDesigner will
  exit after the code generation without showing its window).
- Added ability to change diagram scale by using mouse wheel.
- Implemented CodeLite integration plugin.

Changes in version 1.3.0 beta (2011-01-02):
------------------------------------------------
- Fixed typo in default variable code item's description.
- Fixed code generation of event transition leading from composite state which includes simple
  states.
- Slightly tweaked diagram grid.
- Added diagram autolayout features.

Changes in version 1.2.0 beta (2010-09-02):
------------------------------------------------
- Data type of function parameters is now displayed in diagrams.
- Added support for Enumeration and Include Association to Python code generator.
- Added partial support for Basic Aggregation and Composition Aggregation to Class Diagram
  code generator (for both C++ and Python languages).
- Added ability to enable/disable code generation for specific classes (useful for 'built-in'
  base classes which shouldn't be generated).
- Fixed code generation to per-diagram-specified output file names.
- Fixed modification of class constructor's code via properties dialog.
- Added ability to create diagram element links in diagrams. For example, thanks to this feature
  classes located in one diagram can be used as a bases in a second one, etc. The links
  can be created via dragging from Project items tree if CTRL+ALT is pressed down.
- Fixed improper order of generated base class constructor's parameters.
- Fixed generation of value type sign with user-defined data types.
- Added ability to generate code comments if requested (per-project settings).

Changes in version 1.1.4 beta (2010-07-29):
------------------------------------------------
- Fixed crash occuring when any code item was modified (or properties dialog was closed)
  without previously opened diagram.
- Fixed in-place handling of class members.
- Default values of class data members are displayed in class elements.
- Added support for Enumeration elements in UML class diagram.
- Added support for Include association in UML class diagram.
- Subdiagram can be dropped onto state chart transitions and composite states which will
  create appropriate diagram wrapper calling it.
- Fixed generation of state chart actions with parameters.

Changes in version 1.1.3 beta (2010-06-24):
------------------------------------------------
- Fixed refresh of diagram components which weren't refreshed correctly in some cases.
- Fixed crash that could occure during drag&drop operations in Project items tree.
- Diagram elements can be copied also by dragging from Project items tree (CTRL key must be pressed
  down during the dragging).
- Classes can be instantiated in state chart transitions and composite states (just by dropping
  of a class element onto relevant transition/composite state).
- If diagram element name has changed then also code items' contents refering to the changed name
  are updated in accordance to the new element's name.
- Class members/associations access type can be set via context menu.

Changes in version 1.1.2 beta (2010-06-03):
------------------------------------------------
- Fixed redundantly included header file in generated definition module.
- Added support for class templates including class templates specialization.

Changes in version 1.1.1 beta (2010-05-14):
------------------------------------------------
- Removed annoying messages occured if application settings or diagram bank
  couldn't be read.
- Fixed build problems on amd64 platform (patch by foldink).
- Redesigned application's file structure.
- Application's executable file names changed to lowercase form (e.g. 'codedesigner'
  instead of 'CodeDesigner').
- Fixed false warning ('Initialization has failed') occured during code generation.
- Added splash screen (on option).

Changes in version 1.1.0 beta (2010-05-09):
------------------------------------------------
- Initial release

